datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  contacts      Contact[]
  templates     Template[]
  attachments   Attachment[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Contact {
  id          String  @id @default(cuid())
  fullName    String
  firstName   String?
  lastName    String?
  designation String?
  companyName String
  website     String?
  linkedinUrl String?
  personalLinkedinProfile String?
  emailAddress1 String
  emailAddress2 String?
  genericEmail String?
  location    String?
  country     String?
  facebookUrl String?
  twitterUrl  String?
  experience  String?
  sourceSheet String?
  additionalNotes String?
  emailVerified Boolean?
  emailDomain String?
  accountType String?
  roleBasedEmail Boolean?
  safeToSend  Boolean?
  domain      String?
  niche       String?
  industry    String?
  recruitmentAgency Boolean?
  freeDomain  Boolean?
  diagnosis   String?
  mxDomain    String?
  emailVerificationResponse String?
  bounceType  String?
  user        User    @relation(fields: [userId], references: [id])
  userId      String
}

model Template {
  id      String @id @default(cuid())
  name    String
  subject String
  body    String
  user    User   @relation(fields: [userId], references: [id])
  userId  String
}

model Attachment {
  id       String @id @default(cuid())
  fileName String
  fileType String
  filePath String
  user     User   @relation(fields: [userId], references: [id])
  userId   String
}